# inspired from https://github.com/vegasbrianc/prometheus/blob/master/docker-compose.yml
version: '3.7'

volumes:
    resource_control_sample_output: {}
    prometheus_data: {}
    grafana_data: {}

services:

  resource-control-sample:
    image: ghcr.io/arnaudlemaignen/resource-control-sample:latest
    ports:
      - "9905:9905"
    volumes:
      - resource_control_sample_output:/output
    environment:
      - PIXELS_MIN=1
      - PIXELS_MAX=1000000
      - PIXELS_STEP=500
    depends_on:
      - prometheus
    restart: always
    network_mode: host
    hostname: 127.0.0.1

  prometheus:
    image: docker.io/prom/prometheus:v2.27.1
    volumes:
      - ./compose/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    # links:
    #   - cadvisor:cadvisor
    depends_on:
      - cadvisor
    restart: always
    network_mode: host
    hostname: 127.0.0.1


  node-exporter:
    image: docker.io/prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.cpu.info'
    #  - --collector.filesystem.ignored-mount-points
    #  - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - "9100:9100"
    restart: always
    network_mode: host
    hostname: 127.0.0.1
    deploy:
      mode: global

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      #- /sys/fs/cgroup:/sys/fs/cgroup:ro
    ports:
      - "8080:8080"
    restart: always
    network_mode: host
    hostname: 127.0.0.1
    deploy:
      mode: global

  grafana:
    image: docker.io/grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./compose/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./compose/grafana/config.monitoring
    restart: always
    network_mode: host
    hostname: 127.0.0.1

# networks:
#   default:
